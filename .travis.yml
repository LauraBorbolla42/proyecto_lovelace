#
# Archivo de configuración de Travis.
# Proyecto Lovelace.
#

# Construcción condicional
# Evita el ciclo infinito cuando Travis hace un commit
# if: sender != traviscibot

###############################################################################
# Instalación de dependencias
install:
  - sudo apt-get update
  - sudo apt-get install
    texlive
    texlive-latex-recommended
    texlive-latex-extra
    texlive-lang-spanish
    texlive-bibtex-extra
    texlive-generic-extra
    doxygen
    graphviz

  # Instalación de paquetes directo desde el CTAN y sourceforge
  # glossaries
  - wget http://mirrors.ctan.org/install/macros/latex/contrib/glossaries.tds.zip
  - unzip -d ~/texmf glossaries.tds.zip
  - rm glossaries.tds.zip
  # tracklang
  - wget http://mirrors.ctan.org/install/macros/generic/tracklang.tds.zip
  - unzip -d ~/texmf tracklang.tds.zip
  - rm tracklang.tds.zip
  # bibtex
  - wget https://sourceforge.net/projects/biblatex/files/biblatex-3.9/biblatex-3.9.tds.tgz
  - tar -xvf biblatex-3.9.tds.tgz -C ~/texmf
  - rm biblatex-3.9.tds.tgz
  # babel
  - wget http://mirrors.ctan.org/install/macros/latex/required/babel-base.tds.zip
  - unzip -d ~/texmf babel-base.tds.zip
  - rm babel-base.tds.zip
  # biber
  - wget https://sourceforge.net/projects/biblatex-biber/files/biblatex-biber/current/binaries/Linux/biber-linux_x86_64.tar.gz
  - mkdir ~/ejecutable_biber
  - tar -xvf biber-linux_x86_64.tar.gz -C ~/ejecutable_biber
  - export PATH=~/ejecutable_biber/:$PATH
  - rm biber-linux_x86_64.tar.gz
  # No pues sí... lo único que tienen que hacer los gestores de paquetes de las
  # distribuciones es descomprimir un zip en la carpeta de latex.
  # ¿Para qué tantos intermediarios?

  # # Instalación de cryptopp
  # - wget https://cryptopp.com/cryptopp600.zip
  # - unzip -a -d cryptopp cryptopp600.zip
  # - make -C cryptopp
  # - sudo mkdir /usr/include/cryptopp
  # - sudo mv cryptopp/*.h /usr/include/cryptopp/
  # - sudo mv cryptopp/libcryptopp.a /usr/lib/
  # # Instlación de openssl
  # - wget https://www.openssl.org/source/openssl-1.1.1-pre1.tar.gz
  # - tar -xvf openssl-1.1.1-pre1.tar.gz
  # - cd openssl-1.1.1-pre1 && ./config && make && make install && cd ..


# Fase de construcción ########################################################
script:

  # Compilación de archivos de LaTeX
  # Esto debería dejar el pdf completo
  - make -B -C documentos_entregables
  - make -B -C documentos_entregables glosarios
  - make -B -C documentos_entregables referencias
  - make -B -C documentos_entregables
  - make -B -C documentos_entregables
  - make -B -C documentos_entregables presentacion_fpe
  - make -B -C documentos_entregables referencias_fpe
  - make -B -C documentos_entregables presentacion_fpe
  - make -B -C documentos_entregables presentacion_fpe

  # Revisión de ortografía
  #  - make -C documentos_entregables ortografía

  # Ejecución de funciones de prueba
  # - make -C pruebas_librerias
  # - make -C pruebas_librerias correr

  # Documentación.
  - make documentación_doxygen

# Antes del despliegue
before_deploy:
  - mv README.md pagina_publica/
  - mv reglas_de_estilo.md pagina_publica/
  - mkdir -p pagina_publica/documentos_entregables/documento_final
  - mv documentos_entregables/documento_final/documento_final.pdf pagina_publica/documentos_entregables/documento_final/
  - mkdir -p pagina_publica/documentos_entregables/presentacion_fpe
  - mv documentos_entregables/presentacion_fpe/presentacion_fpe.pdf pagina_publica/documentos_entregables/presentacion_fpe/

# Fase de despliegue
deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  local_dir: pagina_publica
  keep-history: true
  name: RQF7_bot
  verbose: true
  on:
    branch: master
